<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pwn 环境搭建</title>
      <link href="/blog/2022/05/07/00-Pwn%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/blog/2022/05/07/00-Pwn%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="Pwn-环境搭建"><a href="#Pwn-环境搭建" class="headerlink" title="Pwn 环境搭建"></a>Pwn 环境搭建</h1><blockquote><p>系统环境：Ubuntu 20.04 LTS amd64</p></blockquote><h2 id="基本软件"><a href="#基本软件" class="headerlink" title="基本软件"></a>基本软件</h2><p><strong>文本编辑器</strong>: <code>vim</code> + <a href="https://github.com/chxuan/vimplus.git">vimplus</a></p><blockquote><p>vim 就不必多说了，配置好vim用起来香的一批，相关使用及配置–&gt; <a href="vim.md">vim(local)</a> <a href="https://zzz200.github.io/blog/2022/03/10/vim/">vim(published)</a></p></blockquote><p><strong>网络相关工具</strong>: <code>net-tools</code>、<code>ncat</code></p><blockquote><ul><li>net-tools, 包含有ifconfig、netstat这些基本的网络工具</li><li>ncat、nc, 网络连接器</li></ul></blockquote><p><strong>shell增强</strong>: <code>tmux</code>、<code>zsh</code> + <a href="https://ohmyz.sh/">ohmyzsh</a></p><blockquote><ul><li>tmux: 终端复用器，配合上Mac的iTerm2香的一匹</li><li>zsh: 一个不错的shell，加上ohmyzsh，可以省去很多时间去自己配置</li></ul></blockquote><p><strong>ssh+vmware文件夹共享</strong>: 开启ssh服务器，直接在宿主机上ssh连接pwn的虚拟机环境操作即可，宿主机与虚拟机传输文件通过文件夹共享即可，不用再依赖虚拟机的桌面环境(其实可以不用装Desktop版本，直接装个Server版本就足够了)</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/PicturePasted%20image%2020220507163036.png" style="zoom:50%;" /><h2 id="依赖库"><a href="#依赖库" class="headerlink" title="依赖库"></a>依赖库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install lib32ncurses5-dev lib32z1 # 安装32位库</span><br></pre></td></tr></table></figure><ul><li>64位的系统里头默认没有安装32位的运行库，运行32位程序的时候会报错</li></ul><h2 id="Pwn-常用工具"><a href="#Pwn-常用工具" class="headerlink" title="Pwn 常用工具"></a>Pwn 常用工具</h2><h3 id="binutils"><a href="#binutils" class="headerlink" title="binutils"></a>binutils</h3><blockquote><p>📖wiki: <a href="https://zh.wikipedia.org/wiki/GNU_Binutils">https://zh.wikipedia.org/wiki/GNU_Binutils</a></p></blockquote><p>安装： <code>sudo apt install binutils</code></p><h4 id="readelf"><a href="#readelf" class="headerlink" title="readelf"></a>readelf</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">readelf -h    # 显示文件头</span><br><span class="line">readelf -l    # 显示程序头</span><br><span class="line">readelf -S    # 显示节区头</span><br><span class="line">readelf -s    # 显示符号表</span><br><span class="line">readelf --dyn-syms # 显示动态符号表</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">Example</span></span><br><span class="line">❯ readelf -h pwn1</span><br><span class="line">ELF Header:</span><br><span class="line">  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00</span><br><span class="line">  Class:                             ELF64</span><br><span class="line">  Data:                              2&#x27;s complement, little endian</span><br><span class="line">  Version:                           1 (current)</span><br><span class="line">  OS/ABI:                            UNIX - System V</span><br><span class="line">  ABI Version:                       0</span><br><span class="line">  Type:                              EXEC (Executable file)</span><br><span class="line">  Machine:                           Advanced Micro Devices X86-64</span><br><span class="line">  Version:                           0x1</span><br><span class="line">  Entry point address:               0x401060</span><br><span class="line">  Start of program headers:          64 (bytes into file)</span><br><span class="line">  Start of section headers:          14680 (bytes into file)</span><br><span class="line">  Flags:                             0x0</span><br><span class="line">  Size of this header:               64 (bytes)</span><br><span class="line">  Size of program headers:           56 (bytes)</span><br><span class="line">  Number of program headers:         11</span><br><span class="line">  Size of section headers:           64 (bytes)</span><br><span class="line">  Number of section headers:         29</span><br><span class="line">  Section header string table index: 28</span><br></pre></td></tr></table></figure><h4 id="objdump"><a href="#objdump" class="headerlink" title="objdump"></a>objdump</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">objdump -d target   # 反汇编</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">Example</span></span><br><span class="line">❯ objdump -d test -j .text</span><br><span class="line"></span><br><span class="line">test:     file format elf64-x86-64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disassembly of section .text:</span><br><span class="line"></span><br><span class="line">0000000000001050 &lt;_start&gt;:</span><br><span class="line">    1050:31 ed                xor    %ebp,%ebp</span><br><span class="line">    1052:49 89 d1             mov    %rdx,%r9</span><br><span class="line">    1055:5e                   pop    %rsi</span><br><span class="line">    1056:48 89 e2             mov    %rsp,%rdx</span><br><span class="line">    1059:48 83 e4 f0          and    $0xfffffffffffffff0,%rsp</span><br><span class="line">    105d:50                   push   %rax</span><br><span class="line">    105e:54                   push   %rsp</span><br><span class="line">    105f:4c 8d 05 4a 01 00 00 lea    0x14a(%rip),%r8        # 11b0 &lt;__libc_csu_fini&gt;</span><br><span class="line">    1066:48 8d 0d e3 00 00 00 lea    0xe3(%rip),%rcx        # 1150 &lt;__libc_csu_init&gt;</span><br><span class="line">    106d:48 8d 3d c1 00 00 00 lea    0xc1(%rip),%rdi        # 1135 &lt;main&gt;</span><br><span class="line">    1074:ff 15 66 2f 00 00    callq  *0x2f66(%rip)        # 3fe0 &lt;__libc_start_main@GLIBC_2.2.5&gt;</span><br><span class="line">    107a:f4                   hlt</span><br><span class="line">    107b:0f 1f 44 00 00       nopl   0x0(%rax,%rax,1)</span><br><span class="line"></span><br><span class="line">0000000000001080 &lt;deregister_tm_clones&gt;:</span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://cloud.tencent.com/developer/article/1494510">objdump命令解析</a></p></blockquote><h3 id="strace-amp-ltrace"><a href="#strace-amp-ltrace" class="headerlink" title="strace &amp; ltrace"></a>strace &amp; ltrace</h3><ul><li>strace 命令基于 ptrace 系统调用，用于记录和解析程序执行过程中的所有系统调用和信号传递。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">Example</span></span><br><span class="line">❯ ltrace ./pwn1</span><br><span class="line">puts(&quot;please input&quot;please input</span><br><span class="line">)                                                            = 13</span><br><span class="line">gets(0x7fffb930d8f1, 0x220a2a0, 0, 0x7fe8cd9590a7</span><br><span class="line">)                              = 0x7fffb930d8f1</span><br><span class="line">puts(&quot;&quot;</span><br><span class="line">)                                                                        = 1</span><br><span class="line">puts(&quot;ok,bye!!!&quot;ok,bye!!!</span><br><span class="line">)                                                               = 10</span><br><span class="line">+++ exited (status 0) +++</span><br></pre></td></tr></table></figure><h3 id="Pwntools"><a href="#Pwntools" class="headerlink" title="Pwntools"></a>Pwntools</h3><ul><li>pwntools是一个CTF框架及开发库，Pwn选手必备的一个python库</li><li>英文文档： <a href="https://docs.pwntools.com/en/stable/">https://docs.pwntools.com/en/stable/</a></li><li>中文文档： <a href="https://pwntoolsdocinzh-cn.readthedocs.io/en/master/intro.html">https://pwntoolsdocinzh-cn.readthedocs.io/en/master/intro.html</a></li><li><strong>安装</strong>: <code>pip3 install pwntools</code></li></ul><h3 id="逆向工具"><a href="#逆向工具" class="headerlink" title="逆向工具"></a>逆向工具</h3><h4 id="Ghidra-✅"><a href="#Ghidra-✅" class="headerlink" title="Ghidra ✅"></a>Ghidra ✅</h4><p>本人是从学Pwn开始就一直用的 Ghidra，目前做题的需求都能够满足</p><ul><li>本人的Ghidra笔记 –&gt; <a href="Ghidra.md">Ghidra(local)</a> <a href="https://zzz200.github.io/blog/2022/05/05/Ghidra/">Ghidra(published)</a></li><li>简介： <a href="http://0xeb.net/2019/03/ghidra-a-quick-overview/">http://0xeb.net/2019/03/ghidra-a-quick-overview/</a><ul><li>翻译： <a href="https://bbs.pediy.com/thread-250056.htm">https://bbs.pediy.com/thread-250056.htm</a></li></ul></li></ul><h4 id="IDA-Pro"><a href="#IDA-Pro" class="headerlink" title="IDA Pro"></a>IDA Pro</h4><p>官网免费版本（免费版本只能联网使用x64反编译）： <a href="https://hex-rays.com/ida-free/">https://hex-rays.com/ida-free/</a> ，对于IDA Pro因为自己用的很少就不多说了。。。</p><blockquote><ul><li><a href="https://bbs.pediy.com/thread-259304.htm">看雪-ida常用快捷键</a></li><li>《CTF竞赛权威指南 Pwn篇》第6章</li><li><strong>keypatch插件</strong>: <a href="https://github.com/keystone-engine/keypatch">https://github.com/keystone-engine/keypatch</a></li></ul></blockquote><h4 id="radare2"><a href="#radare2" class="headerlink" title="radare2"></a>radare2</h4><p><a href="https://github.com/radare/radare2">https://github.com/radare/radare2</a></p><p>radare2 也是一个逆向工程框架，不同于Ghidra和IDA Pro，它没有GUI界面，所有操作都需要通过命令行来执行。</p><h3 id="动态调试器"><a href="#动态调试器" class="headerlink" title="动态调试器"></a>动态调试器</h3><h4 id="GDB-Pwndbg"><a href="#GDB-Pwndbg" class="headerlink" title="GDB + Pwndbg"></a>GDB + Pwndbg</h4><p>GDB wiki介绍: <a href="https://zh.wikipedia.org/wiki/GNU%E4%BE%A6%E9%94%99%E5%99%A8">https://zh.wikipedia.org/wiki/GNU侦错器</a></p><p>Pwndbg -&gt; 一个GDB插件: <a href="https://github.com/pwndbg/pwndbg">https://github.com/pwndbg/pwndbg</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/pwndbg/pwndbg</span><br><span class="line">cd pwndbg</span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure><p>GDB(Pwndbg)相关的使用: <a href="GDB.md">GDB(local)</a> <a href="https://zzz200.github.io/blog/2022/04/04/GDB/">GDB(published)</a></p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/PicturePasted%20image%2020220507170807.png" style="zoom:50%;" /><p><strong>checksec</strong>, 在安装完 pwndbg 之后会附带安装好 checksec 工具，它也有单独的脚本：<a href="https://github.com/slimm609/checksec.sh">checksec.sh</a>. checksec 可检测可执行文件开启的各种<a href="Linux%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6.md">安全机制(local)</a>，例如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">❯ checksec fastbin_dup_2</span><br><span class="line">[*] &#x27;/mnt/hgfs/ctf/HeapLAB/challenge-fastbin_dup/fastbin_dup_2&#x27;</span><br><span class="line">    Arch:     amd64-64-little</span><br><span class="line">    RELRO:    Full RELRO</span><br><span class="line">    Stack:    Canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      PIE enabled</span><br><span class="line">    RUNPATH:  b&#x27;../.glibc/glibc_2.30_no-tcache</span><br></pre></td></tr></table></figure><h3 id="gadget-finder"><a href="#gadget-finder" class="headerlink" title="gadget finder"></a>gadget finder</h3><blockquote><p>📖wiki: 返回导向编程（英语：Return-Oriented Programming，缩写：ROP）是计算机安全中的一种漏洞利用技术，该技术允许攻击者在程序启用了安全保护技术（如堆栈不可执行）的情况下控制程序执行流，执行恶意代码。其核心思想是通过栈缓冲器溢出等方式控制堆栈调用以劫持程序控制流并执行针对性的机器语言指令序列（称为Gadgets）。所谓 gadgets 就是以 ret 结尾的指令序列，通过这些指令序列，我们可以修改某些地址的内容，方便控制程序的执行流程。</p><ul><li>gadget finder 就是用来寻找这些以 ret 结尾的指令序列的工具</li></ul></blockquote><h4 id="ropper"><a href="#ropper" class="headerlink" title="ropper"></a>ropper</h4><blockquote><p><a href="https://github.com/sashs/Ropper">https://github.com/sashs/Ropper</a></p></blockquote><ul><li>安装: <code>pip3 install ropper</code></li><li>ropper 兼容 pwndbg，可以在 pwndbg 中直接运行来搜索gadget</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">Example</span></span><br><span class="line">❯ ropper -f fastbin_dup_2 --search=&quot;pop rdi&quot;</span><br><span class="line">[INFO] Load gadgets for section: LOAD</span><br><span class="line">[LOAD] loading... 100%</span><br><span class="line">[LOAD] removing double gadgets... 100%</span><br><span class="line">[INFO] Searching for gadgets: pop rdi</span><br><span class="line"></span><br><span class="line">[INFO] File: fastbin_dup_2</span><br><span class="line">0x0000000000000c03: pop rdi; ret;</span><br></pre></td></tr></table></figure><h4 id="ROPgadget"><a href="#ROPgadget" class="headerlink" title="ROPgadget"></a>ROPgadget</h4><blockquote><p><a href="https://github.com/JonathanSalwan/ROPgadget">https://github.com/JonathanSalwan/ROPgadget</a></p></blockquote><ul><li>安装: <code>pip3 install ROPgadget</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">Example</span></span><br><span class="line">❯ ROPgadget --binary fastbin_dup_2 | grep &quot;pop rdi&quot; </span><br><span class="line">0x0000000000000c03 : pop rdi ; ret</span><br></pre></td></tr></table></figure><h4 id="one-gadget"><a href="#one-gadget" class="headerlink" title="one_gadget"></a>one_gadget</h4><blockquote><p><a href="https://github.com/david942j/one_gadget">https://github.com/david942j/one_gadget</a></p></blockquote><ul><li>安装: <code>sudo gem install one_gadget</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">❯ one_gadget libc-2.23.so</span><br><span class="line">0x45226 execve(&quot;/bin/sh&quot;, rsp+0x30, environ)</span><br><span class="line">constraints:</span><br><span class="line">  rax == NULL</span><br><span class="line"></span><br><span class="line">0x4527a execve(&quot;/bin/sh&quot;, rsp+0x30, environ)</span><br><span class="line">constraints:</span><br><span class="line">  [rsp+0x30] == NULL</span><br><span class="line"></span><br><span class="line">0xf03a4 execve(&quot;/bin/sh&quot;, rsp+0x50, environ)</span><br><span class="line">constraints:</span><br><span class="line">  [rsp+0x50] == NULL</span><br><span class="line"></span><br><span class="line">0xf1247 execve(&quot;/bin/sh&quot;, rsp+0x70, environ)</span><br><span class="line">constraints:</span><br><span class="line">  [rsp+0x70] == NULL</span><br></pre></td></tr></table></figure><h3 id="libc库"><a href="#libc库" class="headerlink" title="libc库"></a>libc库</h3><p>本地libc：</p><ul><li><a href="https://github.com/matrix1001/glibc-all-in-one">https://github.com/matrix1001/glibc-all-in-one</a></li><li><a href="https://github.com/niklasb/libc-database">https://github.com/niklasb/libc-database</a></li></ul><p>在线libc查询：</p><ul><li><a href="https://libc.rip/">https://libc.rip/</a></li><li><a href="https://libc.nullbyte.cat/">https://libc.nullbyte.cat</a></li></ul><h4 id="LibcSearcher"><a href="#LibcSearcher" class="headerlink" title="LibcSearcher"></a>LibcSearcher</h4><ul><li><a href="https://github.com/lieanu/LibcSearcher">https://github.com/lieanu/LibcSearcher</a> （很久没有更新了）</li><li><a href="https://github.com/rycbar77/LibcSearcher">https://github.com/rycbar77/LibcSearcher</a> （在上一个的基础上添加了在线查询接口 最近一次更新：2021.11.29）</li></ul><h4 id="patchelf"><a href="#patchelf" class="headerlink" title="patchelf"></a>patchelf</h4><blockquote><p><a href="https://github.com/NixOS/patchelf">https://github.com/NixOS/patchelf</a></p></blockquote><ul><li>patchelf 可以用来指定二进制程序的glibc版本</li><li>安装: <code>sudo apt install patchelf</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">Example</span></span><br><span class="line">patchelf --set-interpreter /opt/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/ld-2.27.so --set-rpath /opt/glibc-all-in-one/libs/2.27-3ubuntu1_amd64 TargetProgram</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://song-10.gitee.io/2020/04/14/pwn-2020-04-14-change-glibc/">指定glibc - nop</a></p></blockquote><h4 id="glibc源码"><a href="#glibc源码" class="headerlink" title="glibc源码"></a>glibc源码</h4><ul><li><a href="https://elixir.bootlin.com/glibc/glibc-2.31/source/">https://elixir.bootlin.com/glibc/glibc-2.31/source/</a></li></ul><h2 id="Pwn环境自动搭建脚本"><a href="#Pwn环境自动搭建脚本" class="headerlink" title="Pwn环境自动搭建脚本"></a>Pwn环境自动搭建脚本</h2><p>为了防止环境被意外删掉或者崩掉后能够快速重建环境，自己就搞了一个包含了上面涉及到的大部分工具的环境搭建脚本： <a href="https://raw.githubusercontent.com/zzZ200/config/main/pwn_env_install.sh">https://raw.githubusercontent.com/zzZ200/config/main/pwn_env_install.sh</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/zzZ200/config/main/pwn_env_install.sh -O ~/Downloads/pwn_env_install.sh</span><br><span class="line">cd ~/Downloads</span><br><span class="line">bash ./pwn_env_install.sh</span><br></pre></td></tr></table></figure><h2 id="Docker环境"><a href="#Docker环境" class="headerlink" title="Docker环境"></a>Docker环境</h2><p>懒的搭建环境的话也有大佬搞好的docker环境：</p><ul><li><a href="https://github.com/skysider/pwndocker">https://github.com/skysider/pwndocker</a></li><li><a href="https://hub.docker.com/r/skysider/pwndocker">https://hub.docker.com/r/skysider/pwndocker</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> pwn </tag>
            
            <tag> environment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ghidra</title>
      <link href="/blog/2022/05/05/Ghidra/"/>
      <url>/blog/2022/05/05/Ghidra/</url>
      
        <content type="html"><![CDATA[<h1 id="Ghidra"><a href="#Ghidra" class="headerlink" title="Ghidra"></a>Ghidra</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li><a href="https://ghidra-sre.org/">Ghidra</a> 是一个由美国国家安全局开发的开源免费的逆向工程工具，跟 IDA Pro 有的一拼。</li></ul><blockquote><p>📖wiki: <a href="https://en.wikipedia.org/wiki/Ghidra">https://en.wikipedia.org/wiki/Ghidra</a></p><p>Ghidra (pronounced Gee-druh; &#x2F;ˈɡiːdrə&#x2F;) is a free and open source reverse engineering tool developed by the National Security Agency (NSA) of the United States. The binaries were released at RSA Conference in March 2019; the sources were published one month later on GitHub. Ghidra is seen by many security researchers as a competitor to IDA Pro. The software is written in Java using the Swing framework for the GUI. The decompiler component is written in C++. Ghidra plugins can be developed in Java or in Python (provided via Jython).</p></blockquote><p>感觉 Ghidra 比较不错的几点：</p><ul><li>开源免费</li><li>全平台可用(Windows、MacOS、Linux)</li><li>32位、64位程序都可以直接拖拽进来分析，不需要像 IDA 那样分析 32位、64 位程序需要选用指定版本的程序打开</li></ul><p>缺点:</p><ul><li>没有 IDA Pro 的远程调试</li><li>支持的处理器系列没有 IDA Pro 多，不过已经足够用了(x86、arm、mips、risc-v都是支持的)</li></ul><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>下载： <a href="https://github.com/NationalSecurityAgency/ghidra">https://github.com/NationalSecurityAgency/ghidra</a></p><p>环境：需要安装 <a href="https://adoptium.net/releases.html?variant=openjdk11&jvmVariant=hotspot">JDK 11</a> （如果有遇到闪退情况的考虑一下JDK版本问题）</p><p>安装：解压后执行启动脚本即可运行，官方也有<a href="https://ghidra-sre.org/InstallationGuide.html">安装向导</a></p><h2 id="导入要分析的程序"><a href="#导入要分析的程序" class="headerlink" title="导入要分析的程序"></a>导入要分析的程序</h2><p>　　先通过 <code>File - New Project...</code> 根据提示创建一个项目，创建完成后可以直接将要分析的程序拖拽进来，选择好对应的程序格式(Ghidra会自动识别，识别不出来的时候再手动选择), 直接双击要分析的程序即可进入代码浏览器。头一次打开会提示进行分析，提示一律默认即可。</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Picture2022-05-05_17-51-11%20(1).gif" style="zoom:50%;" /><h2 id="设置修改"><a href="#设置修改" class="headerlink" title="设置修改"></a>设置修改</h2><p>　　可以先在 <code>Edit - Tool Options...</code> 中修改一下 <code>Decompiler</code> 的设置（默认的设置会不显示它认为不可达的代码段，导致在反编译一些程序时可能会找不着部分代码；另外有些函数方法前缀太长，通过设置可以简化一下显示）</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/PicturePasted%20image%2020220505180623.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/PicturePasted%20image%2020220505180546.png" style="zoom:50%;" /><h2 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h2><p>　　所有的功能窗口可以在 <code>Windows</code> 栏下选择打开</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209205345597.png" style="zoom:50%;" /><p>　　最常用的自然是 <code>Decompile</code> 窗口，不过也不能过分依赖 Ghidra 反编译产生的代码，反编译的代码可能是有问题的，需要再结合中间的汇编代码进行分析。</p><h3 id="查找字符串"><a href="#查找字符串" class="headerlink" title="查找字符串"></a>查找字符串</h3><p>　　在 <code>Defined Strings</code> 窗口可以直接查看搜索识别到的字符串数据：</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/PicturePasted%20image%2020220505183837.png" style="zoom:50%;" /><h3 id="查看函数调用图"><a href="#查看函数调用图" class="headerlink" title="查看函数调用图"></a>查看函数调用图</h3><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209205417723.png" style="zoom:50%;" /><p>　　想知道如何才能进入某个函数，也可以通过函数调用树可以清晰的看出来：</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209211843879.png" style="zoom:50%;" /><h3 id="修改变量名"><a href="#修改变量名" class="headerlink" title="修改变量名"></a>修改变量名</h3><p>　　在变量上右键可以修改变量名：</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209205518389.png" style="zoom:50%;" /><p>　　有些 <code>undefined</code> 类型的变量在反编译板块右键没有修改变量名称选项，需要在汇编板块进行修改：</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209205655043.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209205943891.png" style="zoom:50%;" /><h3 id="添加注释"><a href="#添加注释" class="headerlink" title="添加注释"></a>添加注释</h3><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209210103459.png" style="zoom:50%;" /><h3 id="数据显示"><a href="#数据显示" class="headerlink" title="数据显示"></a>数据显示</h3><p>　　想让这种在 data 段的数据在伪代码界面能够直接显示字符串内容，选择数据格式为 TerminatedCString 即可</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209210232013.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209210427084.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209210502983.png" style="zoom:50%;" /><p>　　如果内容是中文，这种情况：</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209211310528.png" style="zoom:50%;" /><p>　　可以在这个默认设置里修改默认字符集为 UTF-8，就能正常显示了：</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209211347525.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209211421255.png" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Pictureimage-20220209211437664.png" style="zoom:50%;" /><p>　　然后对于后续其他同样的字符串可以使用快捷键 Y 转换。</p><h2 id="分析MBR程序"><a href="#分析MBR程序" class="headerlink" title="分析MBR程序"></a>分析MBR程序</h2><blockquote><p>配置方法参考： <a href="https://jarijaas.github.io/posts/disobey-2020/">https://jarijaas.github.io/posts/disobey-2020/</a></p></blockquote><p>　　选择语言时，选择 <code>x86 - Real Mode - 16 - little - default</code> </p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/PicturePasted%20image%2020220505182757.png" style="zoom:50%;" /><p>　　然后使用 Memory Map 移动代码块的起始地址为 <code>0x7c00</code> (MBR 程序的入口点)</p><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/PicturePasted%20image%2020220505183056.png" style="zoom:50%;" /><p>　　然后继续分析程序就好</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>仍在学习中。。。</p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> Tools </tag>
            
            <tag> pwn </tag>
            
            <tag> re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GDB</title>
      <link href="/blog/2022/04/04/GDB/"/>
      <url>/blog/2022/04/04/GDB/</url>
      
        <content type="html"><![CDATA[<h1 id="GDB-Pwndbg"><a href="#GDB-Pwndbg" class="headerlink" title="GDB + Pwndbg"></a>GDB + Pwndbg</h1><blockquote><p>参考： </p><ul><li><a href="http://csapp.cs.cmu.edu/3e/docs/gdbnotes-x86-64.pdf">GDBNotes</a></li><li><a href="https://sourceware.org/gdb/onlinedocs/gdb/">Debugging with GDB</a></li><li><a href="https://evilpan.com/2020/09/13/gdb-tips/">GDB的那些奇淫技巧-evilpan</a></li></ul></blockquote><p>整理一下 gdb + pwndbg 的一些常用命令</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">gdb program</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">运行程序，简写r</span></span><br><span class="line">(gdb) run</span><br><span class="line">(gdb) r</span><br><span class="line"><span class="meta"># </span><span class="language-bash">带参数运行程序(method 1)</span></span><br><span class="line">(gdb) run arg1 arg2 </span><br><span class="line"><span class="meta"># </span><span class="language-bash">带参数运行程序(method 2)</span></span><br><span class="line">(gdb) set args arg1 arg2</span><br><span class="line">(gdb) run</span><br><span class="line"><span class="meta"># </span><span class="language-bash">指定标准输入</span></span><br><span class="line">(gdb) run &lt;file</span><br><span class="line">(gdb) run &lt; &lt;(python3 -c &#x27;print(b&quot;A&quot;*10)&#x27;)</span><br><span class="line">(gdb) run &lt;&lt;&lt;$(python3 -c &#x27;print(b&quot;A&quot;*10)&#x27;)</span><br><span class="line"><span class="meta"># </span><span class="language-bash">链接到正在运行的进程，并进行调试</span></span><br><span class="line">(gdb) attach &#123;process-id&#125;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">断开链接</span></span><br><span class="line">(gdb) detach</span><br></pre></td></tr></table></figure><h2 id="断点"><a href="#断点" class="headerlink" title="断点"></a>断点</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">添加断点(指定函数名)</span></span><br><span class="line">(gdb) break main</span><br><span class="line"><span class="meta"># </span><span class="language-bash">添加断点(指定内存地址)</span></span><br><span class="line">(gdb) break *0x00400123</span><br><span class="line"><span class="meta"># </span><span class="language-bash">列出所有断点信息(简写info <span class="built_in">break</span>)</span></span><br><span class="line">(gdb) info breakpoints </span><br><span class="line"><span class="meta"># </span><span class="language-bash">删除编号为1的断点</span></span><br><span class="line">(gdb) delete 1</span><br><span class="line"><span class="meta"># </span><span class="language-bash">删除所有断点(简写del)</span></span><br><span class="line">(gdb) delete</span><br><span class="line"><span class="meta"># </span><span class="language-bash">删除内存地址的断点</span></span><br><span class="line">(gdb) clear *0x00400123</span><br><span class="line"><span class="meta"># </span><span class="language-bash">禁用指定编号断点</span></span><br><span class="line">(gdb) disable 2</span><br><span class="line"><span class="meta"># </span><span class="language-bash">启用指定编号断点</span></span><br><span class="line">(gdb) enable 2</span><br><span class="line"><span class="meta"># </span><span class="language-bash">条件断点</span></span><br><span class="line">(gdb) condition &#123;id&#125; &#123;expr&#125;</span><br><span class="line">                  2   i == 10  # 只有在 i==10 成立时2号断点生效</span><br><span class="line"><span class="meta"># </span><span class="language-bash">继续执行(简写c)</span></span><br><span class="line">(gdb) continue</span><br><span class="line"><span class="meta"># </span><span class="language-bash">单步进入(遇到函数会进入)</span></span><br><span class="line">(gdb) stepi</span><br><span class="line"><span class="meta"># </span><span class="language-bash">单步跳过(遇到函数不会进入)</span></span><br><span class="line">(gdb) nexti</span><br><span class="line"><span class="meta"># </span><span class="language-bash">结束当前函数</span></span><br><span class="line">(gdb) finish</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">查看指定函数附近的代码</span></span><br><span class="line">(gdb) list main  </span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看指定地址的代码</span></span><br><span class="line">(gdb) list *0x00400800</span><br><span class="line"><span class="meta"># </span><span class="language-bash">添加源代码搜索路径</span></span><br><span class="line">(gdb) dir &#123;dirpath&#125;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">复原源代码搜索路径</span></span><br><span class="line">(gdb) dir </span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看源代码搜索路径</span></span><br><span class="line">(gdb) show directories</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打印当前执行函数的汇编代码</span></span><br><span class="line">(gdb) disas</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打印指定函数的反汇编代码</span></span><br><span class="line">(gdb) disas main</span><br><span class="line"><span class="meta"># </span><span class="language-bash">对指定地址进行反汇编</span></span><br><span class="line">(gdb) disas &#123;address&#125;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打印程序中的函数</span></span><br><span class="line">(gdb) info functions</span><br></pre></td></tr></table></figure><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">打印backtrace(简写bt)</span></span><br><span class="line">(gdb) backtrace</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打印当前运行的栈帧</span></span><br><span class="line">(gdb) frame</span><br><span class="line"><span class="meta"># </span><span class="language-bash">切换到指定编号的栈帧</span></span><br><span class="line">(gdb) frame &#123;id&#125;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">显示当前函数参数</span></span><br><span class="line">(gdb) info args</span><br></pre></td></tr></table></figure><h2 id="数据查看"><a href="#数据查看" class="headerlink" title="数据查看"></a>数据查看</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">打印出表达式结果</span></span><br><span class="line">(gdb) print &#123;expression&#125;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">十六进制输出结果</span></span><br><span class="line">(gdb) print /x &#123;expr&#125;</span><br><span class="line">/x 十六进制</span><br><span class="line">/o 八进制</span><br><span class="line">/d 十进制</span><br><span class="line">/t 二进制 </span><br><span class="line"><span class="meta"># </span><span class="language-bash">打印历史记录条目</span></span><br><span class="line">(gdb) print $1</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打印指定寄存器数据</span></span><br><span class="line">(gdb) print /x $rax</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">从指定地址处读取数据</span></span><br><span class="line">(gdb) x/[数量][长度单位][显示格式] where</span><br><span class="line">长度单位:</span><br><span class="line">/b 以1字节为单位读取数据</span><br><span class="line">/w 以4字节为单位读取数据</span><br><span class="line">/g 以8字节为单位读取数据</span><br><span class="line"></span><br><span class="line">/i 尝试解析成汇编</span><br><span class="line"></span><br><span class="line">例如:</span><br><span class="line">(gdb) x/8gx $rsp+8</span><br><span class="line">0x7fffffffe478:0x00007fffffffe6ef0x0000000000000000</span><br><span class="line">0x7fffffffe488:0x00007fffffffe70e0x00007fffffffe729</span><br><span class="line">0x7fffffffe498:0x00007fffffffe7390x00007fffffffe74c</span><br><span class="line">0x7fffffffe4a8:0x00007fffffffe7580x00007fffffffe767</span><br><span class="line">(gdb) x/4wd $rsp+8</span><br><span class="line">0x7fffffffe478:-64173276700</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">pwndbg 中加入的 db(dump byte) dw(dump word) dq(dump qword)</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">db address [count] , 命令后可以指定打印的数量, 不指定则使用默认值</span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash">db <span class="variable">$rsp</span></span></span><br><span class="line">00007fffffffe470     01 00 00 00 00 00 00 00 ef e6 ff ff ff 7f 00 00</span><br><span class="line">00007fffffffe480     00 00 00 00 00 00 00 00 0e e7 ff ff ff 7f 00 00</span><br><span class="line">00007fffffffe490     29 e7 ff ff ff 7f 00 00 39 e7 ff ff ff 7f 00 00</span><br><span class="line">00007fffffffe4a0     4c e7 ff ff ff 7f 00 00 58 e7 ff ff ff 7f 00 00</span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash">dw <span class="variable">$rsp</span></span></span><br><span class="line">00007fffffffe470     0001 0000 0000 0000 e6ef ffff 7fff 0000</span><br><span class="line">00007fffffffe480     0000 0000 0000 0000 e70e ffff 7fff 0000</span><br><span class="line">00007fffffffe490     e729 ffff 7fff 0000 e739 ffff 7fff 0000</span><br><span class="line">00007fffffffe4a0     e74c ffff 7fff 0000 e758 ffff 7fff 0000</span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash">dq <span class="variable">$rsp</span></span></span><br><span class="line">00007fffffffe470     0000000000000001 00007fffffffe6ef</span><br><span class="line">00007fffffffe480     0000000000000000 00007fffffffe70e</span><br><span class="line">00007fffffffe490     00007fffffffe729 00007fffffffe739</span><br><span class="line">00007fffffffe4a0     00007fffffffe74c 00007fffffffe758</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">查看寄存器数据</span></span><br><span class="line">(gdb) info registers</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打印本地局部变量</span></span><br><span class="line">(gdb) info locals</span><br><span class="line"><span class="meta"># </span><span class="language-bash">打印全局变量名称</span></span><br><span class="line">(gdb) info variables</span><br><span class="line"><span class="meta"># </span><span class="language-bash">查看类型定义</span></span><br><span class="line">(gdb) ptype &#123;typename&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash">ptype main_arena</span></span><br><span class="line">type = struct malloc_state &#123;</span><br><span class="line">    __libc_lock_t mutex;</span><br><span class="line">    int flags;</span><br><span class="line">    int have_fastchunks;</span><br><span class="line">    mfastbinptr fastbinsY[10];</span><br><span class="line">    mchunkptr top;</span><br><span class="line">    mchunkptr last_remainder;</span><br><span class="line">    mchunkptr bins[254];</span><br><span class="line">    unsigned int binmap[4];</span><br><span class="line">    struct malloc_state *next;</span><br><span class="line">    struct malloc_state *next_free;</span><br><span class="line">    size_t attached_threads;</span><br><span class="line">    size_t system_mem;</span><br><span class="line">    size_t max_system_mem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">pwndbg 中加入 dt (Dump out information on a <span class="built_in">type</span> (e.g. ucontext_t).)</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">打印指定类型的信息（可选指定address）</span></span><br><span class="line">dt typename [address] </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash">dt FILE</span></span><br><span class="line">FILE</span><br><span class="line">    +0x0000 _flags               : int</span><br><span class="line">    +0x0008 _IO_read_ptr         : char *</span><br><span class="line">    +0x0010 _IO_read_end         : char *</span><br><span class="line">    +0x0018 _IO_read_base        : char *</span><br><span class="line">    +0x0020 _IO_write_base       : char *</span><br><span class="line">    +0x0028 _IO_write_ptr        : char *</span><br><span class="line">    +0x0030 _IO_write_end        : char *</span><br><span class="line">    +0x0038 _IO_buf_base         : char *</span><br><span class="line">    +0x0040 _IO_buf_end          : char *</span><br><span class="line">    +0x0048 _IO_save_base        : char *</span><br><span class="line">    +0x0050 _IO_backup_base      : char *</span><br><span class="line">    +0x0058 _IO_save_end         : char *</span><br><span class="line">    +0x0060 _markers             : struct _IO_marker *</span><br><span class="line">    +0x0068 _chain               : struct _IO_FILE *</span><br><span class="line">    +0x0070 _fileno              : int</span><br><span class="line">    +0x0074 _flags2              : int</span><br><span class="line">    +0x0078 _old_offset          : __off_t</span><br><span class="line">    +0x0080 _cur_column          : short unsigned int</span><br><span class="line">    +0x0082 _vtable_offset       : signed char</span><br><span class="line">    +0x0083 _shortbuf            : char [1]</span><br><span class="line">    +0x0088 _lock                : _IO_lock_t *</span><br><span class="line">    +0x0090 _offset              : __off64_t</span><br><span class="line">    +0x0098 _codecvt             : struct _IO_codecvt *</span><br><span class="line">    +0x00a0 _wide_data           : struct _IO_wide_data *</span><br><span class="line">    +0x00a8 _freeres_list        : struct _IO_FILE *</span><br><span class="line">    +0x00b0 _freeres_buf         : void *</span><br><span class="line">    +0x00b8 __pad5               : size_t</span><br><span class="line">    +0x00c0 _mode                : int</span><br><span class="line">    +0x00c4 _unused2             : char [20]</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">显示malloc_state结构体信息（有各个字段的偏移</span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash">dt <span class="string">&quot;struct malloc_state&quot;</span></span></span><br><span class="line">struct malloc_state</span><br><span class="line">    +0x0000 mutex                : __libc_lock_t</span><br><span class="line">    +0x0004 flags                : int</span><br><span class="line">    +0x0008 have_fastchunks      : int</span><br><span class="line">    +0x0010 fastbinsY            : mfastbinptr [10]</span><br><span class="line">    +0x0060 top                  : mchunkptr</span><br><span class="line">    +0x0068 last_remainder       : mchunkptr</span><br><span class="line">    +0x0070 bins                 : mchunkptr [254]</span><br><span class="line">    +0x0860 binmap               : unsigned int [4]</span><br><span class="line">    +0x0870 next                 : struct malloc_state *</span><br><span class="line">    +0x0878 next_free            : struct malloc_state *</span><br><span class="line">    +0x0880 attached_threads     : size_t</span><br><span class="line">    +0x0888 system_mem           : size_t</span><br><span class="line">    +0x0890 max_system_mem       : size_t</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">pwndbg 中加入 xinfo(Shows offsets of the specified address to useful other locations)</span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">显示指定地址到有用位置的偏移</span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash">xinfo [address]</span>  </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash">xinfo</span></span><br><span class="line">Extended information for virtual address 0x5555555548d0:</span><br><span class="line"></span><br><span class="line">  Containing mapping:</span><br><span class="line">    0x555555554000     0x55555555a000 r-xp     6000 0      /home/ubuntu/Documents/pwn/pwn</span><br><span class="line"></span><br><span class="line">  Offset information:</span><br><span class="line">         Mapped Area 0x5555555548d0 = 0x555555554000 + 0x8d0</span><br><span class="line">         File (Base) 0x5555555548d0 = 0x555555554000 + 0x8d0</span><br><span class="line">      File (Segment) 0x5555555548d0 = 0x555555554000 + 0x8d0</span><br><span class="line">         File (Disk) 0x5555555548d0 = /home/ubuntu/Documents/pwn/pwn + 0x8d0</span><br><span class="line"></span><br><span class="line"> Containing ELF sections:</span><br><span class="line">               .text 0x5555555548d0 = 0x5555555548d0 + 0x0</span><br></pre></td></tr></table></figure><h2 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">vis_heap_chunks(Visualize chunks on a heap, default to the current arena<span class="string">&#x27;s active heap.)</span></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="string">可视化显示当前堆分配情况</span></span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash"><span class="string">vis_heap_chunks</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="string">heap、bins、fastbins、smallbins、largebins、tcache、tcachebins</span></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="string">malloc_chunk(Print a chunk.)</span></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash"><span class="string">打印出指定地址的 malloc_chunk</span></span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash"><span class="string">malloc_chunk [addr]</span></span> </span><br></pre></td></tr></table></figure><h2 id="进程调试"><a href="#进程调试" class="headerlink" title="进程调试"></a>进程调试</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">设置当进程调用fork时是否进入子进程</span></span><br><span class="line">(gdb) set follow-fork-mode parent/child </span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">查看历史命令</span></span><br><span class="line">(gdb) show commands</span><br><span class="line"><span class="meta"># </span><span class="language-bash">执行上一条命令</span></span><br><span class="line">(gdb) &lt;enter&gt;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">从文件中加载gdb命令</span></span><br><span class="line">(gdb) source &#123;filepath&#125;</span><br><span class="line"><span class="meta"># </span><span class="language-bash">退出gdb (简写q)</span></span><br><span class="line">(gdb) quit</span><br><span class="line"><span class="meta"># </span><span class="language-bash">帮助</span></span><br><span class="line">(gdb) help</span><br><span class="line"><span class="meta"># </span><span class="language-bash">更改显示风格</span></span><br><span class="line">(gdb) set disassembly-flavor att</span><br><span class="line">(gdb) set disassembly-flavor intel</span><br></pre></td></tr></table></figure><p><strong>pwndbg:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">设置默认只显示源代码段</span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash"><span class="built_in">set</span> context-sections code</span> </span><br><span class="line"><span class="meta"># </span><span class="language-bash">显示源代码段</span></span><br><span class="line"><span class="meta">pwndbg&gt; </span><span class="language-bash">ctx code</span> </span><br></pre></td></tr></table></figure><p><strong>GDB 调试 16位程序</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE target SYSTEM &quot;gdb-target.dtd&quot;&gt;&lt;target&gt;&lt;architecture&gt;i8086&lt;/architecture&gt;&lt;xi:include href=&quot;i386-32bit.xml&quot;/&gt;&lt;/target&gt;&#x27; &gt; target.xml</span><br><span class="line">wget https://raw.githubusercontent.com/qemu/qemu/master/gdb-xml/i386-32bit.xml</span><br><span class="line"></span><br><span class="line">(gdb) set tdesc filename ./target.xml</span><br></pre></td></tr></table></figure><p><strong>target.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span><span class="meta">&lt;!DOCTYPE <span class="keyword">target</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;gdb-target.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">architecture</span>&gt;</span>i8086<span class="tag">&lt;/<span class="name">architecture</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xi:include</span> <span class="attr">href</span>=<span class="string">&quot;i386-32bit.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>i386-32bit.xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Copyright (C) 2010-2017 Free Software Foundation, Inc.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     Copying and distribution of this file, with or without modification,</span></span><br><span class="line"><span class="comment">     are permitted in any medium without royalty provided the copyright</span></span><br><span class="line"><span class="comment">     notice and this notice are preserved.  --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- I386 with SSE --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">target</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;gdb-target.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">feature</span> <span class="attr">name</span>=<span class="string">&quot;org.gnu.gdb.i386.core&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">flags</span> <span class="attr">id</span>=<span class="string">&quot;i386_eflags&quot;</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">start</span>=<span class="string">&quot;22&quot;</span> <span class="attr">end</span>=<span class="string">&quot;31&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;ID&quot;</span> <span class="attr">start</span>=<span class="string">&quot;21&quot;</span> <span class="attr">end</span>=<span class="string">&quot;21&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;VIP&quot;</span> <span class="attr">start</span>=<span class="string">&quot;20&quot;</span> <span class="attr">end</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;VIF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;19&quot;</span> <span class="attr">end</span>=<span class="string">&quot;19&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;AC&quot;</span> <span class="attr">start</span>=<span class="string">&quot;18&quot;</span> <span class="attr">end</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;VM&quot;</span> <span class="attr">start</span>=<span class="string">&quot;17&quot;</span> <span class="attr">end</span>=<span class="string">&quot;17&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;RF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;16&quot;</span> <span class="attr">end</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">start</span>=<span class="string">&quot;15&quot;</span> <span class="attr">end</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;NT&quot;</span> <span class="attr">start</span>=<span class="string">&quot;14&quot;</span> <span class="attr">end</span>=<span class="string">&quot;14&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;IOPL&quot;</span> <span class="attr">start</span>=<span class="string">&quot;12&quot;</span> <span class="attr">end</span>=<span class="string">&quot;13&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;OF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;11&quot;</span> <span class="attr">end</span>=<span class="string">&quot;11&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;DF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;10&quot;</span> <span class="attr">end</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;IF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;9&quot;</span> <span class="attr">end</span>=<span class="string">&quot;9&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;TF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;8&quot;</span> <span class="attr">end</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;SF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;7&quot;</span> <span class="attr">end</span>=<span class="string">&quot;7&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;ZF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;6&quot;</span> <span class="attr">end</span>=<span class="string">&quot;6&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">start</span>=<span class="string">&quot;5&quot;</span> <span class="attr">end</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;AF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;4&quot;</span> <span class="attr">end</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">start</span>=<span class="string">&quot;3&quot;</span> <span class="attr">end</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;2&quot;</span> <span class="attr">end</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">start</span>=<span class="string">&quot;1&quot;</span> <span class="attr">end</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;CF&quot;</span> <span class="attr">start</span>=<span class="string">&quot;0&quot;</span> <span class="attr">end</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">flags</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;eax&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span> <span class="attr">regnum</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;ecx&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;edx&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;ebx&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;esp&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;data_ptr&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;ebp&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;data_ptr&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;esi&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;edi&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;eip&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;code_ptr&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;eflags&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i386_eflags&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;cs&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;ss&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;ds&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;es&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;fs&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;gs&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Segment descriptor caches and TLS base MSRs --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--reg name=&quot;cs_base&quot; bitsize=&quot;32&quot; type=&quot;int32&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;reg name=&quot;ss_base&quot; bitsize=&quot;32&quot; type=&quot;int32&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;reg name=&quot;ds_base&quot; bitsize=&quot;32&quot; type=&quot;int32&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;reg name=&quot;es_base&quot; bitsize=&quot;32&quot; type=&quot;int32&quot;/--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;fs_base&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;gs_base&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;k_gs_base&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">flags</span> <span class="attr">id</span>=<span class="string">&quot;i386_cr0&quot;</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PG&quot;</span> <span class="attr">start</span>=<span class="string">&quot;31&quot;</span> <span class="attr">end</span>=<span class="string">&quot;31&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;CD&quot;</span> <span class="attr">start</span>=<span class="string">&quot;30&quot;</span> <span class="attr">end</span>=<span class="string">&quot;30&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;NW&quot;</span> <span class="attr">start</span>=<span class="string">&quot;29&quot;</span> <span class="attr">end</span>=<span class="string">&quot;29&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;AM&quot;</span> <span class="attr">start</span>=<span class="string">&quot;18&quot;</span> <span class="attr">end</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;WP&quot;</span> <span class="attr">start</span>=<span class="string">&quot;16&quot;</span> <span class="attr">end</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;NE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;5&quot;</span> <span class="attr">end</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;ET&quot;</span> <span class="attr">start</span>=<span class="string">&quot;4&quot;</span> <span class="attr">end</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;TS&quot;</span> <span class="attr">start</span>=<span class="string">&quot;3&quot;</span> <span class="attr">end</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;EM&quot;</span> <span class="attr">start</span>=<span class="string">&quot;2&quot;</span> <span class="attr">end</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;MP&quot;</span> <span class="attr">start</span>=<span class="string">&quot;1&quot;</span> <span class="attr">end</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;0&quot;</span> <span class="attr">end</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">flags</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">flags</span> <span class="attr">id</span>=<span class="string">&quot;i386_cr3&quot;</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PDBR&quot;</span> <span class="attr">start</span>=<span class="string">&quot;12&quot;</span> <span class="attr">end</span>=<span class="string">&quot;31&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--field name=&quot;&quot; start=&quot;3&quot; end=&quot;11&quot;/&gt;</span></span><br><span class="line"><span class="comment">&lt;field name=&quot;WT&quot; start=&quot;2&quot; end=&quot;2&quot;/&gt;</span></span><br><span class="line"><span class="comment">&lt;field name=&quot;CD&quot; start=&quot;1&quot; end=&quot;1&quot;/&gt;</span></span><br><span class="line"><span class="comment">&lt;field name=&quot;&quot; start=&quot;0&quot; end=&quot;0&quot;/--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PCID&quot;</span> <span class="attr">start</span>=<span class="string">&quot;0&quot;</span> <span class="attr">end</span>=<span class="string">&quot;11&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">flags</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">flags</span> <span class="attr">id</span>=<span class="string">&quot;i386_cr4&quot;</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;VME&quot;</span> <span class="attr">start</span>=<span class="string">&quot;0&quot;</span> <span class="attr">end</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PVI&quot;</span> <span class="attr">start</span>=<span class="string">&quot;1&quot;</span> <span class="attr">end</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;TSD&quot;</span> <span class="attr">start</span>=<span class="string">&quot;2&quot;</span> <span class="attr">end</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;DE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;3&quot;</span> <span class="attr">end</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PSE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;4&quot;</span> <span class="attr">end</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PAE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;5&quot;</span> <span class="attr">end</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;MCE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;6&quot;</span> <span class="attr">end</span>=<span class="string">&quot;6&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PGE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;7&quot;</span> <span class="attr">end</span>=<span class="string">&quot;7&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PCE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;8&quot;</span> <span class="attr">end</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;OSFXSR&quot;</span> <span class="attr">start</span>=<span class="string">&quot;9&quot;</span> <span class="attr">end</span>=<span class="string">&quot;9&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;OSXMMEXCPT&quot;</span> <span class="attr">start</span>=<span class="string">&quot;10&quot;</span> <span class="attr">end</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;UMIP&quot;</span> <span class="attr">start</span>=<span class="string">&quot;11&quot;</span> <span class="attr">end</span>=<span class="string">&quot;11&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;LA57&quot;</span> <span class="attr">start</span>=<span class="string">&quot;12&quot;</span> <span class="attr">end</span>=<span class="string">&quot;12&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;VMXE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;13&quot;</span> <span class="attr">end</span>=<span class="string">&quot;13&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;SMXE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;14&quot;</span> <span class="attr">end</span>=<span class="string">&quot;14&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;FSGSBASE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;16&quot;</span> <span class="attr">end</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PCIDE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;17&quot;</span> <span class="attr">end</span>=<span class="string">&quot;17&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;OSXSAVE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;18&quot;</span> <span class="attr">end</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;SMEP&quot;</span> <span class="attr">start</span>=<span class="string">&quot;20&quot;</span> <span class="attr">end</span>=<span class="string">&quot;20&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;SMAP&quot;</span> <span class="attr">start</span>=<span class="string">&quot;21&quot;</span> <span class="attr">end</span>=<span class="string">&quot;21&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PKE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;22&quot;</span> <span class="attr">end</span>=<span class="string">&quot;22&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">flags</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">flags</span> <span class="attr">id</span>=<span class="string">&quot;i386_efer&quot;</span> <span class="attr">size</span>=<span class="string">&quot;8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;TCE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;15&quot;</span> <span class="attr">end</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;FFXSR&quot;</span> <span class="attr">start</span>=<span class="string">&quot;14&quot;</span> <span class="attr">end</span>=<span class="string">&quot;14&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;LMSLE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;13&quot;</span> <span class="attr">end</span>=<span class="string">&quot;13&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;SVME&quot;</span> <span class="attr">start</span>=<span class="string">&quot;12&quot;</span> <span class="attr">end</span>=<span class="string">&quot;12&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;NXE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;11&quot;</span> <span class="attr">end</span>=<span class="string">&quot;11&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;LMA&quot;</span> <span class="attr">start</span>=<span class="string">&quot;10&quot;</span> <span class="attr">end</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;LME&quot;</span> <span class="attr">start</span>=<span class="string">&quot;8&quot;</span> <span class="attr">end</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;SCE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;0&quot;</span> <span class="attr">end</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">flags</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;cr0&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i386_cr0&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;cr2&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;cr3&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i386_cr3&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;cr4&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i386_cr4&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;cr8&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;efer&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i386_efer&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;st0&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i387_ext&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;st1&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i387_ext&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;st2&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i387_ext&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;st3&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i387_ext&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;st4&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i387_ext&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;st5&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i387_ext&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;st6&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i387_ext&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;st7&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;80&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i387_ext&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;fctrl&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">group</span>=<span class="string">&quot;float&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;fstat&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">group</span>=<span class="string">&quot;float&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;ftag&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">group</span>=<span class="string">&quot;float&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;fiseg&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">group</span>=<span class="string">&quot;float&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;fioff&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">group</span>=<span class="string">&quot;float&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;foseg&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">group</span>=<span class="string">&quot;float&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;fooff&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">group</span>=<span class="string">&quot;float&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;fop&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">group</span>=<span class="string">&quot;float&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--/feature&gt;</span></span><br><span class="line"><span class="comment">&lt;feature name=&quot;org.gnu.gdb.i386.32bit.sse&quot;--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vector</span> <span class="attr">id</span>=<span class="string">&quot;v4f&quot;</span> <span class="attr">type</span>=<span class="string">&quot;ieee_single&quot;</span> <span class="attr">count</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vector</span> <span class="attr">id</span>=<span class="string">&quot;v2d&quot;</span> <span class="attr">type</span>=<span class="string">&quot;ieee_double&quot;</span> <span class="attr">count</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vector</span> <span class="attr">id</span>=<span class="string">&quot;v16i8&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int8&quot;</span> <span class="attr">count</span>=<span class="string">&quot;16&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vector</span> <span class="attr">id</span>=<span class="string">&quot;v8i16&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int16&quot;</span> <span class="attr">count</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vector</span> <span class="attr">id</span>=<span class="string">&quot;v4i32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int32&quot;</span> <span class="attr">count</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vector</span> <span class="attr">id</span>=<span class="string">&quot;v2i64&quot;</span> <span class="attr">type</span>=<span class="string">&quot;int64&quot;</span> <span class="attr">count</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">union</span> <span class="attr">id</span>=<span class="string">&quot;vec128&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;v4_float&quot;</span> <span class="attr">type</span>=<span class="string">&quot;v4f&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;v2_double&quot;</span> <span class="attr">type</span>=<span class="string">&quot;v2d&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;v16_int8&quot;</span> <span class="attr">type</span>=<span class="string">&quot;v16i8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;v8_int16&quot;</span> <span class="attr">type</span>=<span class="string">&quot;v8i16&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;v4_int32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;v4i32&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;v2_int64&quot;</span> <span class="attr">type</span>=<span class="string">&quot;v2i64&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;uint128&quot;</span> <span class="attr">type</span>=<span class="string">&quot;uint128&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">union</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">flags</span> <span class="attr">id</span>=<span class="string">&quot;i386_mxcsr&quot;</span> <span class="attr">size</span>=<span class="string">&quot;4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;IE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;0&quot;</span> <span class="attr">end</span>=<span class="string">&quot;0&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;DE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;1&quot;</span> <span class="attr">end</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;ZE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;2&quot;</span> <span class="attr">end</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;OE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;3&quot;</span> <span class="attr">end</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;UE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;4&quot;</span> <span class="attr">end</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PE&quot;</span> <span class="attr">start</span>=<span class="string">&quot;5&quot;</span> <span class="attr">end</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;DAZ&quot;</span> <span class="attr">start</span>=<span class="string">&quot;6&quot;</span> <span class="attr">end</span>=<span class="string">&quot;6&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;IM&quot;</span> <span class="attr">start</span>=<span class="string">&quot;7&quot;</span> <span class="attr">end</span>=<span class="string">&quot;7&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;DM&quot;</span> <span class="attr">start</span>=<span class="string">&quot;8&quot;</span> <span class="attr">end</span>=<span class="string">&quot;8&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;ZM&quot;</span> <span class="attr">start</span>=<span class="string">&quot;9&quot;</span> <span class="attr">end</span>=<span class="string">&quot;9&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;OM&quot;</span> <span class="attr">start</span>=<span class="string">&quot;10&quot;</span> <span class="attr">end</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;UM&quot;</span> <span class="attr">start</span>=<span class="string">&quot;11&quot;</span> <span class="attr">end</span>=<span class="string">&quot;11&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;PM&quot;</span> <span class="attr">start</span>=<span class="string">&quot;12&quot;</span> <span class="attr">end</span>=<span class="string">&quot;12&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;FZ&quot;</span> <span class="attr">start</span>=<span class="string">&quot;15&quot;</span> <span class="attr">end</span>=<span class="string">&quot;15&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">flags</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;xmm0&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;128&quot;</span> <span class="attr">type</span>=<span class="string">&quot;vec128&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;xmm1&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;128&quot;</span> <span class="attr">type</span>=<span class="string">&quot;vec128&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;xmm2&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;128&quot;</span> <span class="attr">type</span>=<span class="string">&quot;vec128&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;xmm3&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;128&quot;</span> <span class="attr">type</span>=<span class="string">&quot;vec128&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;xmm4&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;128&quot;</span> <span class="attr">type</span>=<span class="string">&quot;vec128&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;xmm5&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;128&quot;</span> <span class="attr">type</span>=<span class="string">&quot;vec128&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;xmm6&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;128&quot;</span> <span class="attr">type</span>=<span class="string">&quot;vec128&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;xmm7&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;128&quot;</span> <span class="attr">type</span>=<span class="string">&quot;vec128&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">reg</span> <span class="attr">name</span>=<span class="string">&quot;mxcsr&quot;</span> <span class="attr">bitsize</span>=<span class="string">&quot;32&quot;</span> <span class="attr">type</span>=<span class="string">&quot;i386_mxcsr&quot;</span> <span class="attr">group</span>=<span class="string">&quot;vector&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">feature</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>set arch i8086</code> 命令并不能生效，上述解决办法来自 <a href="https://gist.github.com/MatanShahar/1441433e19637cf1bb46b1aa38a90815">https://gist.github.com/MatanShahar/1441433e19637cf1bb46b1aa38a90815</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> Tools </tag>
            
            <tag> pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/blog/2022/03/13/docker/"/>
      <url>/blog/2022/03/13/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><blockquote><p>学习资料：<a href="https://yeasy.gitbook.io/docker_practice/">https://yeasy.gitbook.io/docker_practice/</a></p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>Docker 是一个开源的应用容器引擎。</li><li>Docker 是一种容器技术，解决软件跨环境迁移的问题，属于操作系统层面的虚拟化技术。</li><li>Docker架构：<a href="https://www.runoob.com/docker/docker-architecture.html">https://www.runoob.com/docker/docker-architecture.html</a></li></ul><p>三个基本概念：</p><ul><li><a href="https://yeasy.gitbook.io/docker_practice/basic_concept/image">镜像（Image）</a></li><li><a href="https://yeasy.gitbook.io/docker_practice/basic_concept/container">容器（Container）</a></li><li><a href="https://yeasy.gitbook.io/docker_practice/basic_concept/repository">仓库（Repository）</a></li></ul><p>更详细的介绍见学习资料↑</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p><a href="https://docs.docker.com/engine/install/">https://docs.docker.com/engine/install/</a></p></blockquote><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="服务相关命令"><a href="#服务相关命令" class="headerlink" title="服务相关命令"></a>服务相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">          状态   启动   重启    停止 开机自启 禁用自启</span></span><br><span class="line">systemctl [status|start|restart|stop|enable|disable] docker</span><br></pre></td></tr></table></figure><h3 id="镜像相关命令"><a href="#镜像相关命令" class="headerlink" title="镜像相关命令"></a>镜像相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker images           # 查看现有镜像</span><br><span class="line">docker search redis     # 搜索镜像(例如redis)</span><br><span class="line">docker pull redis:5.0   # 拉取5.0版本redis镜像,不指定镜像仓库地址则从docker.io获取镜像,不指定tag则默认是:latest</span><br><span class="line">docker rmi cefde848bd49 # 删除镜像(可根据IMAGE ID或名称删除, ID可使用短ID,一般取三个字符能区分其他镜像即可)</span><br></pre></td></tr></table></figure><h3 id="容器相关命令"><a href="#容器相关命令" class="headerlink" title="容器相关命令"></a>容器相关命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name=c1 -p 80:80 -v /home/test/web:/web centos:7 /bin/bash # 启动容器</span><br><span class="line">docker run -id --name=c2 -p 80:80 -v /home/test/web:/web centos:7           # 后台启动容器</span><br><span class="line">-it 交互式容器(-t终端,-i标准输入保持打开)</span><br><span class="line">-id 守护式容器(-d后台)</span><br><span class="line">--name 指定容器名称</span><br><span class="line">-v 宿主机目录(文件):容器内目录(文件) # 将宿主机的目录挂载到容器中</span><br><span class="line">-p 宿主机端口号:容器端口号          # 将容器端口映射到宿主机中</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker exec -it c2 /bin/bash # 进入容器</span><br><span class="line">docker ps                    # 查看正在运行的容器</span><br><span class="line">docker ps -a                 # 查看所有容器</span><br><span class="line">docker stop c2               # 停止容器(根据CONTAINER ID或NAMES指定)</span><br><span class="line">docker rm c1                 # 删除容器</span><br><span class="line"></span><br><span class="line">docker rm `docker ps -aq`    # 删除所有容器</span><br><span class="line">docker rmi `docker images -q redis` # 删除所有仓库名为redis的镜像</span><br><span class="line">docker stop $(docker ps -q) &amp; docker rm $(docker ps -aq) # 停止并删除所有容器</span><br></pre></td></tr></table></figure><h3 id="数据卷操作"><a href="#数据卷操作" class="headerlink" title="数据卷操作"></a>数据卷操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker volume create vol-demo  # 创建一个名为 vol-demo 的数据卷</span><br><span class="line">docker volume ls               # 查看所有的数据卷</span><br><span class="line">docker volume inspect vol-demo # 查看 vol-demo 数据卷的信息</span><br><span class="line">docker volume rm vol-demo      # 删除 vol-demo 数据卷</span><br><span class="line">docker volume prune            # 删除无主数据</span><br><span class="line">docker run -d -P --name web --mount source=vol-demo,target=/web nginx # 挂载数据卷</span><br></pre></td></tr></table></figure><ul><li>当容器目录和数据卷目录绑定后，对方的修改会立即同步</li><li>一个数据卷可以被多个容器同时挂载</li><li>一个容器也可以被挂载多个数据卷</li><li>容器删除后，数据卷仍然存在</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">通过mount将宿主机目录挂载到容器，可通过添加,read-only限制只读</span></span><br><span class="line">--mount type=bind,source=/home/test/web,target=/web,read-only </span><br></pre></td></tr></table></figure><h3 id="查看信息命令"><a href="#查看信息命令" class="headerlink" title="查看信息命令"></a>查看信息命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ docker system df     # 查看镜像、容器、数据卷所占用空间</span><br><span class="line">TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE</span><br><span class="line">Images          2         1         316.5MB   72.78MB (22%)</span><br><span class="line">Containers      1         0         1.093kB   1.093kB (100%)</span><br><span class="line">Local Volumes   0         0         0B        0B</span><br><span class="line">Build Cache     2         0         1.863kB   1.863kB</span><br><span class="line">➜  ~</span><br><span class="line"></span><br><span class="line">➜  ~ docker diff wiki      # 查看容器存储层的改动内容</span><br><span class="line">C /etc</span><br><span class="line">C /etc/nginx</span><br><span class="line">C /etc/nginx/conf.d</span><br><span class="line">C /etc/nginx/conf.d/default.conf</span><br><span class="line">C /var</span><br><span class="line">C /var/cache</span><br><span class="line">C /var/cache/nginx</span><br><span class="line">A /var/cache/nginx/client_temp</span><br><span class="line">A /var/cache/nginx/fastcgi_temp</span><br><span class="line">A /var/cache/nginx/proxy_temp</span><br><span class="line">A /var/cache/nginx/scgi_temp</span><br><span class="line">A /var/cache/nginx/uwsgi_temp</span><br><span class="line">➜  ~</span><br><span class="line"></span><br><span class="line">➜  ~ docker inspect wiki    # 获取容器/镜像的元数据</span><br><span class="line">➜  ~ docker container logs  # 获取容器的输出信息</span><br></pre></td></tr></table></figure><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><ul><li>使用Dockerfile文件来定制镜像</li></ul><p>Dockerfile中的每一个指令都会建立一层，shell命令尽量写在一行中，用 <code>&amp;&amp;</code> 串联，时刻注意这是在构建每一层，而不是shell脚本</p><p>注意每一层构建的最后一定要清理掉无关文件</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> 基础镜像   <span class="comment"># FROM用来指定基础镜像，必须为第一条指令</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> 命令        <span class="comment"># RUN指令用来执行命令行命令，与直接在命令行中输入的命令一样</span></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t 镜像名 &lt;上下文路径&gt; [-f &lt;dockerfile path&gt;]</span><br></pre></td></tr></table></figure><ul><li>一般来说，应该将Dockerfile文件置于一个空目录下，再将需要用到的文件拷贝到当前目录</li></ul><h3 id="Dockerfile指令"><a href="#Dockerfile指令" class="headerlink" title="Dockerfile指令"></a>Dockerfile指令</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> 基础镜像   <span class="comment"># FROM用来指定基础镜像，必须为第一条指令</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> 命令        <span class="comment"># RUN指令用来执行命令行命令，与直接在命令行中输入的命令一样</span></span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> [--<span class="built_in">chown</span>=&lt;user&gt;:&lt;group&gt;] &lt;源路径&gt; &lt;目标路径&gt;</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> &lt;命令&gt;                <span class="comment"># 用于指定默认容器主进程的启动命令</span></span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [ <span class="string">&quot;program&quot;</span>, <span class="string">&quot;arg1&quot;</span>, <span class="string">&quot;arg2&quot;</span> ]</span></span><br><span class="line"><span class="keyword">ENV</span> &lt;key&gt; &lt;value&gt;         <span class="comment"># 用于设置环境变量，容器运行时依旧存在</span></span><br><span class="line"><span class="keyword">ARG</span> &lt;key&gt;[=&lt;value&gt;]       <span class="comment"># 用于设置环境变量，容器运行时不会存在，定义的默认值可使用--build-arg来覆盖，要使用时需要在各个阶段指定</span></span><br><span class="line">VOLUMNE &lt;路径&gt;             <span class="comment"># 定义匿名卷</span></span><br><span class="line"><span class="keyword">EXPOSE</span> &lt;端口<span class="number">1</span>&gt; [&lt;端口<span class="number">2</span>&gt;...] <span class="comment"># 声明容器运行时提供服务的端口，在执行docker run -P时会随机映射EXPOSE的端口</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> &lt;工作目录路径&gt;       <span class="comment"># 指定工作目录</span></span></span><br><span class="line"><span class="keyword">USER</span> &lt;用户名&gt;[:&lt;用户组&gt;]     <span class="comment"># 指定当前用户</span></span><br><span class="line"><span class="keyword">SHELL</span><span class="language-bash"> [<span class="string">&quot;executable&quot;</span>, <span class="string">&quot;parameters&quot;</span>] <span class="comment"># 指定 RUN、ENTRYPOINT、CMD指令的shell，默认是 /bin/sh -c</span></span></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="language-bash"> [选项] CMD &lt;命令&gt; <span class="comment"># 设置检查容器健康状况的命令</span></span></span><br><span class="line">--interval=检查时间间隔，默认<span class="number">30</span>s</span><br><span class="line">--timeout=超时时间，默认<span class="number">30</span>s</span><br><span class="line">--retries=重试次数，默认<span class="number">3</span>次</span><br></pre></td></tr></table></figure><blockquote><p>具体内容查看：</p><ul><li><a href="https://yeasy.gitbook.io/docker_practice/image/dockerfile">https://yeasy.gitbook.io/docker_practice/image/dockerfile</a></li><li><a href="https://docs.docker.com/engine/reference/builder/">https://docs.docker.com/engine/reference/builder/</a></li></ul></blockquote><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p><a href="https://yeasy.gitbook.io/docker_practice/compose">https://yeasy.gitbook.io/docker_practice/compose</a></p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="镜像加速"><a href="#镜像加速" class="headerlink" title="镜像加速"></a>镜像加速</h3><p><a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p><h3 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h3><blockquote><p><a href="https://docs.docker.com/config/daemon/systemd/">https://docs.docker.com/config/daemon/systemd/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line">vim /etc/systemd/system/docker.service.d/http-proxy.conf</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Environment=&quot;HTTP_PROXY=http://proxy.example.com:80&quot;</span><br><span class="line">Environment=&quot;HTTPS_PROXY=https://proxy.example.com:443&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim</title>
      <link href="/blog/2022/03/10/vim/"/>
      <url>/blog/2022/03/10/vim/</url>
      
        <content type="html"><![CDATA[<h1 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h1><blockquote><p>学习：</p><ul><li><a href="https://missing-semester-cn.github.io/2020/editors/">https://missing-semester-cn.github.io/2020/editors/</a></li><li><a href="https://danielmiessler.com/study/vim/">https://danielmiessler.com/study/vim/</a></li></ul></blockquote><img src="https://raw.githubusercontent.com/zzZ200/imgrepos/main/Picturevi-vim-cheat-sheet-sch.gif" style="zoom:50%;" /><p><strong>打开文件方式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim 文件路径             # 打开指定文件</span><br><span class="line">vim +数字 文件路径    # 打开指定的文件，并且将光标移动到指定行</span><br><span class="line">vim +/关键词 文件的路径# 打开指定文件，并高亮显示关键词</span><br><span class="line">vim 文件路径1 文件路径2 文件路径3 # 同时打开多个文件</span><br></pre></td></tr></table></figure><h2 id="Vim-三种模式"><a href="#Vim-三种模式" class="headerlink" title="Vim 三种模式"></a>Vim 三种模式</h2><h3 id="一般模式-Normal-mode"><a href="#一般模式-Normal-mode" class="headerlink" title="一般模式 (Normal mode)"></a>一般模式 (Normal mode)</h3><ul><li><p>打开文件后默认模式</p></li><li><p>在该模式下不能对文件直接编辑，可以输入快捷键进行一些操作（删除行、复制行、移动光标、粘贴等等）</p></li></ul><h3 id="插入模式-Insert-mode"><a href="#插入模式-Insert-mode" class="headerlink" title="插入模式 (Insert mode)"></a>插入模式 (Insert mode)</h3><ul><li>在该模式下可以对文件的内容进行编辑</li></ul><h3 id="命令模式-Last-line-mode"><a href="#命令模式-Last-line-mode" class="headerlink" title="命令模式 (Last line mode)"></a>命令模式 (Last line mode)</h3><ul><li>可以在末行输入命令来对文件进行操作（搜索、替换、保存、退出、撤销、高亮等）</li></ul><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><table><thead><tr><th>基本操作</th><th>作用</th></tr></thead><tbody><tr><td><code>:w</code></td><td>保存</td></tr><tr><td><code>:wq</code> 或 <code>ZZ</code></td><td>保存并退出</td></tr><tr><td><code>:e</code></td><td>打开文件</td></tr><tr><td><code>u</code></td><td>undo</td></tr><tr><td><code>Ctrl+r</code></td><td>redo</td></tr><tr><td><code>.</code></td><td>重复上一个操作</td></tr></tbody></table><table><thead><tr><th>光标移动</th><th>作用</th></tr></thead><tbody><tr><td><code>h</code></td><td>往左移动</td></tr><tr><td><code>j</code></td><td>往下移动</td></tr><tr><td><code>k</code></td><td>往上移动</td></tr><tr><td><code>l</code></td><td>往右移动</td></tr><tr><td><code>gg</code></td><td>移动到首行</td></tr><tr><td><code>G</code></td><td>移动到尾行</td></tr><tr><td>m<code>G</code></td><td>移动到第m行</td></tr><tr><td><code>0</code></td><td>到行首</td></tr><tr><td><code>^</code></td><td>到行首第一个非空白字符</td></tr><tr><td><code>$</code></td><td>到行末尾</td></tr><tr><td><code>f</code>&lt;</td><td>跳转到目标字符处(这里是&lt;)</td></tr><tr><td><code>t</code>&lt;</td><td>跳转到目标字符前(这里是&lt;)</td></tr><tr><td><code>Ctrl+f</code></td><td>向下翻屏</td></tr><tr><td><code>Ctrl+b</code></td><td>向上翻屏</td></tr></tbody></table><table><thead><tr><th>删除操作</th><th>作用</th></tr></thead><tbody><tr><td><code>dd</code></td><td>删除当前行</td></tr><tr><td><code>dt&lt;</code></td><td>删除从光标所在位置到指定字符前的内容(这里是&lt;)</td></tr><tr><td><code>D</code></td><td>清空光标所在位置到行末尾的内容</td></tr><tr><td><code>d</code>m</td><td>删除到指定位置处，例如d0删除从光标位置到行首，dw删除一个单词</td></tr><tr><td><code>C</code></td><td>删除光标所在位置后的内容并进入insert模式</td></tr><tr><td><code>S</code></td><td>删除光标所在行的内容并进入insert模式</td></tr><tr><td><code>cis</code></td><td>删除当前句子内容并进入insert模式</td></tr><tr><td><code>ct</code>&lt;</td><td>删除到目标字符(这里是&lt;)前的内容并进入insert模式</td></tr></tbody></table><table><thead><tr><th>复制粘贴</th><th>作用</th></tr></thead><tbody><tr><td><code>y</code></td><td>复制选中的内容</td></tr><tr><td><code>yip</code></td><td>复制当前段落内容</td></tr><tr><td><code>yy</code></td><td>复制当前行</td></tr><tr><td><code>p</code></td><td>粘贴到光标后</td></tr><tr><td><code>P</code></td><td>粘贴到光标前</td></tr></tbody></table><table><thead><tr><th>折叠操作</th><th>作用</th></tr></thead><tbody><tr><td><code>zc</code></td><td>折叠代码块</td></tr><tr><td><code>zo</code></td><td>打开折叠</td></tr><tr><td><code>zr</code></td><td>展开所有折叠</td></tr><tr><td><code>za</code></td><td>打开&#x2F;关闭折叠</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:set foldmethod = indent   # 用缩进表示折叠，适用于Python</span><br><span class="line">:set foldmethod = syntax   # 根据语法进行折叠</span><br></pre></td></tr></table></figure><table><thead><tr><th>分屏操作</th><th>作用</th></tr></thead><tbody><tr><td><code>Ctrl+W s</code></td><td>上下分割，打开当前文件</td></tr><tr><td><code>:sp filepath</code></td><td>上下分割，打开新文件</td></tr><tr><td><code>Ctrl+W v</code></td><td>左右分割，打开当前文件</td></tr><tr><td><code>:vsp filepath</code></td><td>左右分割，打开新文件</td></tr><tr><td><code>Ctrl+W h</code></td><td>切换到左边的窗口</td></tr><tr><td><code>Ctrl+W j</code></td><td>切换到下边的窗口</td></tr><tr><td><code>Ctrl+W k</code></td><td>切换到上边的窗口</td></tr><tr><td><code>Ctrl+W l</code></td><td>切换到右边的窗口</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:1, $ normal i#         # 批量添加注释符</span><br><span class="line">:% s/old/new/g          # 替换</span><br><span class="line">:/[search]&lt;CR&gt;          # 搜索目标字符串, n查找下一个, N查找上一个</span><br><span class="line">gg=G                    # 自动格式化对齐代码</span><br><span class="line">:20,30d                 # 删除第20行到第30行内容</span><br></pre></td></tr></table></figure><h2 id="推荐使用"><a href="#推荐使用" class="headerlink" title="推荐使用"></a>推荐使用</h2><blockquote><p>vimplus: <a href="https://github.com/chxuan/vimplus">https://github.com/chxuan/vimplus</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">~/.vimrc.custom.config   <span class="comment"># 用户自定义配置</span></span></span><br><span class="line">&quot; 用户自定义配置（该文件放一般性配置，可覆盖~/.vimrc里的配置</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"># </span><span class="language-bash">~/.vimrc.custom.plugins  <span class="comment"># 用户自定义插件</span></span></span><br><span class="line">&quot; 增加插件后需要进行插件安装，安装步骤如下：</span><br><span class="line">&quot; 1.执行:w保存修改</span><br><span class="line">&quot; 2.执行,s重新加载vim配置</span><br><span class="line">&quot; 3.执行,,i进行插件安装</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><blockquote><p>在 vimplus 环境下配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">~/.vimrc.custom.config</span></span><br><span class="line">inoremap kj &lt;ESC&gt;   &quot; 修改ESC按键映射</span><br><span class="line">nnoremap U &lt;c-r&gt;    &quot; 配置U为重做</span><br><span class="line">nnoremap &lt;leader&gt;&lt;leader&gt;r :!./%&lt;cr&gt; &quot; 配置,,r为运行当前脚本</span><br></pre></td></tr></table></figure><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><blockquote><p>在 vimplus 环境下安装</p></blockquote><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><blockquote><p>参考：</p><ul><li><a href="https://mednoter.com/UltiSnips.html">https://mednoter.com/UltiSnips.html</a></li><li><a href="https://github.com/SirVer/ultisnips">https://github.com/SirVer/ultisnips</a></li><li><a href="https://www.sirver.net/blog/2012/01/08/second-episode-of-ultisnips-screencast/">https://www.sirver.net/blog/2012/01/08/second-episode-of-ultisnips-screencast/</a></li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">~/.vimrc.custom.plugins</span></span><br><span class="line">Plug &#x27;SirVer/ultisnips&#x27;</span><br><span class="line">Plug &#x27;honza/vim-snippets&#x27;</span><br></pre></td></tr></table></figure><p>安装完成后创建 <code>~/.vim/UltiSnips</code> 目录，在这里面编辑自定义代码块</p><p>创建的代码块文件注意命名：通用代码块（<code>all.snippets</code>）、仅 <code>*.py</code> 文件可用的代码块（<code>python.snippets</code>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">snippet trigger_word [ &quot;description&quot;  [option] ]</span><br><span class="line"></span><br><span class="line">something</span><br><span class="line"></span><br><span class="line">endsnippet</span><br></pre></td></tr></table></figure><p>快捷键修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># </span><span class="language-bash">~/.vimrc.custom.config</span></span><br><span class="line">let g:UltiSnipsExpandTrigger=&quot;&lt;c-g&gt;&quot;       # Ctrl+g 触发代码段</span><br><span class="line">let g:UltiSnipsJumpForwardTrigger=&quot;&lt;c-f&gt;&quot; </span><br><span class="line">let g:UltiSnipsJumpBackwardTrigger=&quot;&lt;c-b&gt;&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> blog </tag>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
